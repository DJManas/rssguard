4.5.2
-----

Added:
* Added new "Discover feeds" dialog which is automatically opened when user hits "Add new feed" button. In this dialog, use does not have to input exact feed address but can enter just regular website address and RSS Guard will try to discover all available feeds possible. (#1134)
* ATOM/RSS/JSON/Sitemap feeds now automatically use "ETag" HTTP headers which has potential speedup when fetching feeds with no new messages. This can bring 10-80 % speedup if user uses more feeds which do support "ETag". (#1136)
* Support for Sitemap "sitemap.xml" files is added! Vast majority of websites have sitemaps and RSS Guard now can read them in the same way it does with RSS/ATOM formats. "Discover feeds" dialog has Sitemaps support integrated and it even is able to traverse sitemap indexes. GZipped sitemaps are supported too. (#1129)
* Added multiple/extended selection to feeds list! Now it is possible to select multiple items at once (feeds, categories, etc.) and perform batch actions on them - batch editing, deleting, marking read/unread, re-sorting - when some feeds are selected it is now in "Edit selected items" dialog possible to batch change only some properties in a very clean and universal way. (#1010, #89)
* Localizations updated.
* Documentation updated.
* Arguments parsing is now totally overhauled. It is now possible to use both double and single quotes to quote arguments. Read "Scraping Websites" chapter in [docs](https://rssguard.readthedocs.io/en/latest/features/scraping.html#scraping-websites) to know more.
* Local files can now be used directly as sources for feeds, just select "Local file" in add/edit feed dialog.

Fixed:
* Fixed OPML import/export when some feeds use custom script as source. (#1133)
* RSS/ATOM parsing is now greatly enhanced.

4.5.1
-----

!!! [Documentation](https://rssguard.readthedocs.io) was migrated to ReadTheDocs platfotm and some parts of it were updated !!!

Added:
* Completely new, custom "toast" notifications:
    * Configurable position on screen.
    * Can be displayed on secondary screens.
    * Automatically adopts look of currently active RSS Guard skin.
    * Can be close via close corner button or via `Esc` keyboard button.
    * When hovered with mouse, notification stays shown, when not hovered, it is automatically hidden after 15 seconds.
    * Displays list of newly fetched articles and offers some basic actions like marking as read, showing in article list or in web browser.
    * These notifications do not need "tray icon" to be activated.
    * Can be tweaked in `Notifications` section of settings.
* `pdb` debugging file is now distributed with RSS Guard on Windows.
* NPM packages updated to latest versions.

Fixed:
* AppData file now does not contain `<pre>` tags.
* HTTP redirection cycles are now solved.
* Web cache is now stored in correct directory on Linux. (#1098)
* Fixed behavior of Google-based phrase suggestion in web browser navigation text box.
* Many different features of RSS Guard got minor fixes, some parts of source code were refactored. Particularly, one nasty "semi-bug" was fixed which influenced speed of article switching in article list. It should now be faster. Much faster.
* Article counting for "regex queries" is now disabled because this was very performance-hungry even with small number of regex queries, sadly.
* Translations of some languages are now more complete.
* Some unused source code was removed.
* Some unused deps were removed.

4.5.0
-----

!!! Note that at this point, NO new features will be added for at least 4-5 new releases as I must concentrate on fixing bugs and polishing already existing features !!!

Localizations are now translated via Crowdin: https://crowdin.com/project/rssguard

Added:
* List of article filters assigned to feed is now visible in feed details pane. (#1045)
* Right-to-left optional layout for feeds/articles. You can switch this in each feed properties.
* Gmail: Labels are now fetched from the service too and they are synchronizable.
* New feature called "regex queries" allowing users to have (persistent) regular expression based article list filters. See your feed list for "Regex queries" item and right click to add one.
* "reader mode" feature now uses skin-based format & colors.
* All features which generate random colors now use better HSV-based algorithm.
* Added application-wide and feed-wide ability to limit articles based on article date/time. This can be changed in application settings in "Feed fetching" section and in feed properties dialog in "Articles" section.
* JavaScript code of article filters now has syntax highlighting.
* Use non-standard "url" element as fallback for article URLs in RSS format.
* Percentages of localization progres for each translation is now shown in "Localization" settings section.
* "clang-format" updated.
* User CSS styles can now be supplied via file `<user-data-folder>/web/user-styles.css`.
* When fetching metadata during OPML import, there is now option to NOT fetch icons. (#1009)

Fixed:
* Icons in feed list are now correctly vertically centered. (#999)
* Fixes related to word-wrap of long texts in article list and feed details pane. (#1033)
* Multi-column sorting is now correctly persistent. (#1039)
* Fixed a problem where article filters are sometimes not applied correctly when feed is fetched.
* Skin's pallete (dark) are now applied depending on slightly enhanced logic.
* Skin's custom colors are now applied depending on slightly enhanced logic.
* HTTP redirection was not working sometimes, breaking some feeds.
* Docs updated.
* Feedly: Fix errors when some feeds did not have titles.
* Almost all localizations refreshed.
* Fixed multiple crashes.
* Correctly show numeric badge on Windows if RSS Guard starts in tray/minimized mode.

4.4.0
-----

Added:
* Read/unread state is now also shown by coloured dot in article list, inspired by similar feature of QuiteRSS. The behavior is switchable in settings. (#948)
* Details of selected feed list item are now enhanced with new information. (#962)
* Item (feed) ID is now visible in item details and in tooltips of feed list. (#965)
* "nudus" skin is bit tweaked. (#942)
* Added option to reorganize any folder in feed list alphabetically even in manual sorting mode. (#918)
* Added shortcuts to scroll article up/down. (#408)
* Added global option to open all hyperlinks by default in external web browser. (#386)
* Email editor for Gmail now supports rich-text.
* Added support for very fast feed fetching intervals.
* Added button to clear web cache and storage.
* Added some missing icons.

Fixed:
* Application performance is now hugely improved when using big number of labels and/or article filters. There are some possibilities for extra performance fine-tuning which might be addressed in the future. (#952)
* Behavior and visual representation of "article highlighter" and "article list filter" tool buttons is now fixed. (#943)
* Newly created label is now placed in correct sort position in feed list. (#978)
* Fixed html/plain auto-detection for "https://blog.torproject.org/blog/feed". (#979)
* Modal dialogs are also taken into account for feature "do not fetch feeds when main window is unfocused". (#973)
* Hamburger menu did not work in fullscreen mode in some cases. (#953)
* Resizing of feed import dialog is now better. (#945)
* Unwanted application restarts. (#940)
* Main window fade-in effect on Windows OS is now consistent. (#933)
* Many other smaller fixes.

4.3.4
-----

Added:
* Persistent article/item viewer. By default it is on. If no article is selected but feed/category is, then miscellaneous information about selected feed list item is displayed. (#424)
* macOS build is now built with macOS 11.
* Linux build is now built with Ubuntu 20.04 which is now oldest supported Linux LTS distribution.
* Reworked logic of determining which article states (read/unread/starred/unstarred) have changed when synchronizing states to remote feed servers. This concerns all synchronized plugins like Gmail, Greader, Feedly, etc. and show in theory lead to much better performance when you mark many articles as read or unread.
* Couple of extra QoL enhancements for Gmail like proper encoding of attachment filenames, turned off displaying of "enclosures" as these are displayed in other way, etc.

Fixed:
* Deadlock when fetching feeds in some corner situations is now resolved. (#910)
* URLs of articles are now sanitized from leading and trailing spaces. (#914)
* ATOM feeds were mistakenly changed to RSS feeds during OPML import. (#913)
* Now compiles with GCC 13. (#911)
* Freezing of GUI when fetching feeds should now be gone even on newer Qt library.
* Correct account-wide proxy is used when importing feeds.
* Article duplicity checks are now much more useful and actually working in article filters.
* Translations synced.
* All buttons from article toolbar now correctly follow tool button style.

4.3.3
-----

Added:
* Article searching was greatly improved - now you can use either text or regexp or wildcard as search phrase and you can choose whether to search just in titles or in whole article. (#886)
* Added option to focus feed/article lists with keyboard shortcuts. (545)
* Uninstaller now should detect if RSS Guard is running or not. (#529)
* Gmail: Original e-mail body is now appended to response.
* Gmail: E-mail preview now uses styling from skin for unified UX.
* Minor enhancements for OPML importing.

Fixed:
* Showing pictures from authenticated feeds now should work. (#909)
* Word-wrap is now correctly used for plain-text articles. (#900)
* Some memory leaks were patched and also SQLite database connections now share "cache" across all threads, resulting in drastically better RAM usage of the app.
* Feedly: Article state synchronization now works.
* Updated docs, updated translations.

4.3.2
-----

Added:
* Display total number of underlying feeds/categories in account's tooltip in feed list. (#881)
* Press "CTRL+F" when article script textbox is highlighted in "Article filters" dialog to allow for text searching. (#889)
* Filtering option in article list toolbar are now inclusive with checkbox like appearance. You can now thus select multiple filtering conditions and if article meets atleast one of them, it is displayed. (#468)
* WebEngine disk cache now can be disabled in settings. If it is "disabled" then RSS Guard will use memory-based cache which is automatically destroyed when RSS Guard exits. (#725)
* Help spoilers now can display HTML help with clickable hyperlinks.
* Skins are now able to load custom TTF and OTF fonts and also skins now are able to specify application-wide font. You can see sample usage of this feature in [sample](https://github.com/martinrotter/rssguard/tree/master/resources/skins/plain) skin.

Fixed:
* Fixed crash when importing OPML files.
* Fixed looooong-standing hidden bug which could cause that labels DEassigned from filters were not synchronized back to feed service if supported.
* Enhanced information about "resources" in "About" dialog.


4.3.1
-----

Fixed:
* Reverted to Qt 6.3 for Windows 10+ builds due to some regressions AGAIN.
* Fixed TT-RSS icons downloading when obtaining list of feeds/folders.
* RSS Guard now converts all placeholders (for example "%data%") to native path folder separators.

4.3.0
-----

Added:
* Massive update for feed fetching mechanism. It is now very parallelized and performance gain should be brutal. On my development PC with 4 cores (Intel i5) I observed 800 % performance boost. Note that this feature required huge number of changes on source code so there could be some corner case regressions or not so polished situations. File bug report when that happens. Also, number of threads used by this feature is configurable via `--threads` command line switch. This parallelization approach will also be applied to some other parts of application in the future, particularly for some massive batched network operations in some plugin - TT-RSS, Greader or Gmail - which will result in massive performance boost too.
* RSS Guard is now available on Flathub in two distinct variants - "full" and "lite" (same as "nonwebengine").
* Suffix ".xml" is also accepted for OPML 2.0 files.
* Brutal speed enhancements when importing OPML 2.0 files. Whole functionality is now properly parallelized and performance boost is potentially massive, depending on number of your CPU cores/threads.
* Qt 6 bumped to 6.4.2 version - this fixes some regressions.

Fixed:
* Some random Mac OS X crash. (#866)

4.2.7
-----

Added:
* Released only due to technical reasons. (#836)

Fixed:
* Released only due to technical reasons. (#836)

4.2.6
-----

Added:
* Bunch of premade sample article filters added to "Article filters" window.
* Placeholders in external tools definitions can be now arbitrarily placed.
* Article RSS enclosures can now be added from within article filters.
* Added customizable skin color for feeds with NEW articles. So now it is possible to distinguish between NEW and UNREAD (but old) articles. (#850)
* Added application debug log dialog. See "Help" menu for more.
* Too big fetched feed icons are now automatically scaled down to fixed size (48x48).
* Now it is possible to run post-process script when importing OPML. (#848)
* Now it is possible to change "User-Agent" HTTP header. (#835)
* Added now column into article list which shows labels for each article. (#768)
* Now it is possible to "suppress" feed. Suppressed feeds do not trigger notifications. (#745)

Fixed:
* HTML detection on the QTextBrowser viewer is now more precise. (#813)
* Article decoding for Nextcloud News works better. (#814)
* Inoreader built-in API tokens are removed, because they were abused.
* Default AdBlock lists now have corrected URL addresses.
* Fixed full-article scraper "scrape-full-articles.py".
* Do some preparations and code cleanups for adding "lite" RSS Guard variant to Flathub.
* Nextcloud News plugin processes "mediaThumbnail" and "mediaDescription" when parsing articles. (#831)
* Avoid appending empty RSS enclosures to articles. (#832)
* AppImage reverted to Qt 5 as Qt 6 support in AppImage generator is very very buggy.
* All dialogs where icons/images are selected now load their "formats" dynamically to support all possible image formats correctly. (#834) This effectivelly adds "webp" and other formats on systems where it is supported.
* Fixed crash. (#849)
* Enable smooth-scrolling by default. (#793)

4.2.5
-----

Added:
* RSS Guard now can use super fast feed/article refresh rates. At this point it is possible to set refresh interval even to 1 second to allow super fast checking for content changes. (#723)

Fixed:
* Newspaper mode caused some GUI glitches. (#810)
* Feedly crashed whole application when performing folder/feed synchronization. (#807)
* Some specific feeds are faulty but some adjustments were made to make RSS/ATOM parsing more loose. (#805)
* Fixed HTML/plain article content auto-detection for some specific HTML cases. (#792)
* Lessened severity of some debug messages. (#804)

4.2.4
-----

Added:
* Intelligent and network-usage-friendly two-way article synchronization is now supported in TT-RSS plugin too. Note that "api_newsplus" plugin must be installed on your TT-RSS instance. (#339)
* Mac OS X release of RSS Guard now supports "arm64 Apple Silicon" architecture. (#758)
* Google Reader API plugin now supports Miniflux. (#780)
* Full-blown drag/drop feed/category reordering/sorting. Behavior is different depending on whether "alphabetic sorting" is enabled or not. (f63af3a05)
* Windows and Linux official packages now use Qt 6.3.1 or newer. Qt 5.15 is still supported, though.

Fixed:
* Handling of CLI parameters was improved in several places throughout the app. This fixes calling external browsers etc. (#748)
* Tray icon sometimes reported wrong number of new/unread articles. (#754)
* App should handle pinned shortcuts on Windows better and allow it to re-open existing main window of running RSS Guard instance. (#773)
* App sometimes generated empty OPML files. (#774)
* Columns in article list were sometimes wrongly reset to default state. (#778)
* Fixed icon validation for Flatpak release. (#782)
* Skin "nudux-*" was improved. (#783)
* Feeds sorting mode/order is now correctly persistent in all cases. (#784)
* Handling of images in non-webengine article viewer is now better. (#785)
* Better MinGW compatibility when compilling RSS Guard.
* Translations synced.
* Updated docs.
* Specific error strings are now propagated to feed's tooltips properly so user can see specific error messages for feeds.
* Article content layout is now greatly improved as content is automagically converted to HTML when displayed.
* Better date/time handling of incoming e-mails in Gmail plugin.

4.2.3
-----

Added:
* Autostart feature is now overally better and works with Flatpak build too. (#718)
* Added a switch to automatically reject all incoming HTTP cookies application-wide. (#716)
* Gmail: Display proper "To" e-mail header when displaying e-mails.

Fixed:
* Feedly: Correct article URLs are now fetched if possible. (#732)
* Mac OS X: Fixed launching with error "invalid application". (#721)
* External resources for non-web-engine article viewer are now resolved more correctly.

4.2.2
-----

Added:
* Feedly now supports intelligent synchronization algorithm, resulting in much faster sync.
* Feedly now decodes feed titles from HTML to plain text.
* New CLI "-w" option to force "nowebengine" behavior even in standard "webengine" RSS Guard builds.
* Article viewers are greatly refactored and internally use sane C++ interface - this allows this piece of RSS Guard to be expanded better in the future.
* "nowebengine" text-based article viewer now can display images. (#583)
* "nowebengine" text-based article viewer now can act as VERY SIMPLE web browser. It displays webpages in a simpler text-like fashion, it can follow hyperlinks, context menu offers more actions like downloading of links etc.
* Gmail plugin now has better e-mail viewer which also allows to "Forward" e-mails. It will be extended in the future even more. Also, e-mails are now sent in "HTML" mode.
* Data can be optionally exported to OPML 2.0 without icons. (#685)
* Added button into tray icon context menu to allow show/hide of main RSS Guard window. (#679)
* Article **list** filtering button is now greatly enhanced. Go to "Settings -> User interface -> Toolbars -> Toolbar for article list" and add "Article list filter" button to the toolbar.

Fixed:
* If article does not provide sane date/time, replace with current date. This particularly concerned Gmail plugin.
* Added some missing icons, some icons changed.
* Some UI strings updated, translations updated too.
* "Licenses" page in "About" dialog was redesigned.
* Other minor fixes.

4.2.1
-----

Added:
* Number format of unread counts in task bar icon and tray icon is now enhanced. It shows format "%1k" for number bigger than 999, for example 16 000 of unread articles will be displayed as "16k". (#662)

Fixed:
* Dynamic libraries are now properly "linked" in Mac OS X build. (#663)

4.2.0
-----

Added:
* Items in feed list (accounts, categories, feeds) now can be manually sorted. Go to "Feeds -> Sort alphabetically" menu option to switch the feature. Then you can re-adjust sort order with context menu on each item. (#302)
* Article list now can display full article titles with multiline layout. Switch the feature in "Settings -> Feeds & articles -> Articles list". (#570)
* Date/time format of articles in article list is now VERY customizable, you can set to display e. g. time only for today's items, or show relative dates for recent items etc. (#608)
* Taskbar item of RSS Guard on Windows now displays progress of feed downloading, also show number of unread articles in main window title and as a "bubble" icon in taskbar. (#622)
* RSS Guard now builds with cmake. (#615)
* "Add feed" and "Edit feed" dialogs were redesigned a bit for better UX. (#603)
* New action "Open main menu" can now be added to toolbars. (#604)
* If feed does not provide date/time for its articles, then current date/time is used and now this artificial date/time is iterated to achieve consistent sorting for those articles. (#621)
* Individual feeds can now be turned off. Turning feed "off" disables it and it won't get any new articles. See "Edit feed" dialog, specifically "Miscellaneous" tab. (#393)
* Gmail: Synchronization of e-mails is now MUCH faster, especially subsequent synchronizations. Also, some Gmail-related fixes were added.
* TT-RSS: Added "share to published" feature which allows user to save custom notes to TT-RSS. Can be used with context menu on "[SYSTEM] User-published articles" feed list item. (#198)
* Count of unread articles in taskbar is now switchable. (#649)
* Documentation was updated. (#582)
* All modal dialogs now should have "maximize" button. (#629)
* Context menu of article list now offers action "Copy links". (#345)
* Articles downloaded from single feed are now de-duplicated before they are processed and saved into RSS Guard DB. (#650)
* Node.js integration was polished and generalized and will be used for more optional features in the future.
* Firefox-inspired "reader mode" is now available in WebEngine version of RSS Guard. Check internal web browser toolbar for the relevant "Open in reader mode" button. (#638)
* New action "Open in internal browser (no new tab)" which opens source website of article in article previewer. (#590)
* Polishing of feed import feature. (#619)
* Updated built-in "nudus-*" skins. Thanks to akinokonomi for this.
* RSS Guard is now aware of "qt5/6-ct" style used by "qtct" tool.
* Handling of skins, Qt stylesheets and Qt styles is now rewritten quite a lot to achieve more consistent UX and allow for much greater flexibility for skin creators.


Fixed:
* Feedly: HTML entities/code in article titles were not encoded and displayed correctly. (#576)
* GUI separators were resetting their positions to middle, hopefully fixed. (#587)
* Inaccurate reporting of new articles when there are no new articles, due to DB layer error. (#618)
* "New messages" feed status is now more persistent. (#631)
* Handling of character set in MariaDB backend is now improved, all UTF-8 characters should now work correctly. (#579)
* Loading of skins/themes is now done more early to avoid some clashes with GUI initialization. (#611)
* Fixed displaying of special characters in RSS/RDF/ATOM account name. (#657)
* No separators in custom source specification are needed now.

4.1.2
-----

Fixed:
* Make webengine cookies synchronization one-way because it was crashing in some instances. This is likely temporary fix.
* Fixed RSS Guard crashing when using MariaDB backend. Problem was in buggy runtime generation of DDL SQL scripts. (#573)
* Expanding/collapsing of categories is now EVEN MORE properly persistent and behaves more correctly when filtering feed list in some way. (#546)

4.1.0
-----

RSS Guard now has its own DISCORD: https://discord.gg/7xbVMPPNqH

Special thanks to @akinokonomi who helped with this release and made world a better place to live our lives!

Added:
* Network communication of RSS Guard now shares cookies and user-agent with bundled WebEngine. You can thus access cookie-protected resources in RSS Guard, including feeds. (#556)
* Confirmation dialog is displayed when removing article filter. (#562)
* Use "QSoundPlayer" for better support when playing notification sounds, no GStreamer required now. (#551)
* New default skins with light/dark variants, Nudus. Thanks to @akinokonomi for amazing job. Nudus is lightweight skin with maintainable code base. Note all other skins will be removed in next release as it is difficult to provide reasonable support for them. (#540)
* Optionally display only time (without date) for today's articles. (#530)
* Icon size of toolbars is now configurable.
* More web attributes added to web viewer context menu.
* Use more standard user-agent.
* Tens of minor tweaks added.

Fixed:
* Expanding/collapsing of categories is now properly persistent and behaves more correctly when filtering feed list in some way. (#546)
* No more crashing after "mark item as read" action. (#563)
* Deal with spaces in feed URLs. (#542)
* Fix crash in Greader plugin. (#539)
* Fix cleaning up of database when clearing articles older than 0 days.
* Finally solving issues with remembering article list/viewer splitter position. (#517)
* Update some hyperlinks, use correct terminology. (#536, #537)
* Make "article list row height" work as intended. (#528)
* Localizations synced.
* Application now closes correctly on Linux, if tray area is not available and tray icon is mistakenly still "enabled".
* Server JavaScript file of Adblock is now copied to destination properly.
* Regex filtering and "show unread only" features now work together in feed list.
* Node.js "NODE_PATH" value is now determined in runtime, not hardcoded.

4.0.4
-----

RSS Guard now has its own DISCORD: https://discord.gg/7xbVMPPNqH

Added:
* Updated documentation. (#516)
* Sizes of horizontal/vertical width/height of article preview are now kept separately. User can thus have different sizes of article preview in each layout. (#515)
* Added new simplistic skin "nudus". (#512)
* Article filters now can determine "uniqueness" of article according to article's "id". (#509)
* Some columns in article list now also display respective values in tooltips. (#513)
* Columns "read" and "important" in article list are now resizable. (#514)

Fixed:
* Avoid unwanted displays of article previewer. (#507)
* "Automatically expand item when selected" now behaves consistently when launched with keyboard shortcut. (#506)
* Fixed multiple issues regarding article "focus" or "selection".
* Fixed some problems with recognizing filenames when downloading files.
* Fixed crash when repeatedly downloading some files.
* Tweaked some icons.
* Fixed executable bits on some deployed files.
* Updated skin "API".

4.0.3
-----

Added:
* Now it is possible to disable hardcoded keyboard shortcuts in feed/article lists so that user-defined single-stroke shortcuts can work properly. (#484)
* Skins were reverted to 4.0.1 as they were very buggy. Previous skins were stable and will be used for time to come. I will make brand new polished skin in some next release which will not replace existing skins but will be added.

Fixed:
* Settings dialog now remembers its size and also adds scrollbars where needed. Also was polished a bit. (#493)
* Icon of "standard RSS/ATOM/..." service/account was updated to be "RSS" icon, not "RSS Guard" icon and also is preselected in "Add account" dialog.
* Updated documentation and translations.
* "Written by" bottom section of article preview now uses same date/time format as article list.
* Code refactored.
* Icons are now properly loaded when fetching list of feeds in Tiny Tiny RSS.
* Inline article searching now uses much smaller delay after typing search phrase.

4.0.2
-----

Added:
* Documentation now contains section for DIY migration of data from RSS Guard 3.x line.
* Updated localizations.
* Notification sounds now have adjustable volume. (#488)
* Searching in articles is now performed with delay after search expression is typed. (#485)
* Big account "edit" dialogs now have scrollbars if they are too big to fit on screen. (#483)
* Both built-in skins now use same Pico.css CSS library and have unified look for both light and dark variants (except of dark colors of course).

Fixed:
* Gstreamer libraries are now bundled into AppImage version of RSS Guard.
* Feedly now fetches messages correctly, no more message disappearing, related algorithm for article DB storing was also updated. (#487)
* AdBlock local Node.js-based server now has only really needed dependencies.
* Fixed problem with linking "librssguard.so" on some Linux distributions. (#486)

4.0.0
-----

4.0.0 is new major release of RSS Guard. RSS Guard 4.x is NOT backwards compatible with 3.x line. Specifically:
* configuration file "config.ini" IS fully backwards compatible,
* database file "database.db" is NOT backwards compatible.

You may ask why is there new major version and why backwards compatibility is broken:
* I needed to completely overhaul some of core concepts inside RSS Guard.
* Database structure in file "database.db" was very complicated and hard to maintain and had to be simplified. Number of database tables was greatly reduced and whole structure is easier to follow.
* Source code was greatly simplified in many places which makes RSS Guard easier to maintain and easier to develop new features.
* Also, and this is potential killer feature, new changes allowed implementation of "next-gen" synchronization algorithms which may, in some cases, dramatically speed-up two-way synchronization of articles. This new synchronization algorithm is right now implemented and enabled for Google Reader API plugin as PoC and it is called "Intelligent synchronization algorithm" within RSS Guard. The algorithm will be implemented for other plugins over time.
* There is crazy number of new features and bugfixes. See list below.
* Also, let me say some more extra points:
    * More than 4 000 code changes were made in total during RSS Guard development. Codebase consists of 38 500 lines of C++ code.
    * First version of RSS Guard was published 8 years ago.
    * RSS Guard is one-man project, I have implemented it on my own. 99% of code is written from scratch.
    * Received donations for RSS Guard were under 100 USD in total.
    * If you feel that RSS Guard is slow, broken or shitty application, then you are probably right. Nonetheless, you should still submit well-structured and sane bug report, so that I can actually fix the issue! If you do not submit bug report, then please do no spread lies about how bad RSS Guard is and switch to another feed reader instead. 

Added:
* Brand new notifications subsystem added. It can play sounds, individual events are independently configurable in application settings. (#356, #144)
* "MessageObject" class now exposes "rawContents" property for message filtering. Property contains raw RSS/ATOM/JSON contents of the message. (#377)
* URL-embedded cookies are now supported, as well as classic cookies, which are now saved in non-persistent cookie jar. (#391)
* "Next-gen" synchronization algorithms which may, in some cases, dramatically speed-up two-way synchronization of articles. This new synchronization algorithm is right now implemented and enabled for Google Reader API plugin as PoC and is called "Intelligent synchronization algorithm" within RSS Guard. The algorithm will be also implemented for other plugins in the future.
* Google Reader API plugin supports "ot" option.
* Documentation was completely rewritten.
* Fixed support for OS/2.
* Optional notification for login failures.
* Improved bug report templates (PR by sakkamade). (#467)
* Properly implement "feed://" scheme to be able to "open" feeds from web browsers etc. (#390)
* Added "Unread messages" node to feeds list which now centralizes access to all unread messages. (#384)
* New search box for feeds list toolbar which now allows users to search/filter feeds list. (#380)
* Ability to show nothing instead of message count in feeds list if count is 0. (#385)
* Added button to feeds list context menu to expand or collapse items (recursively). (#344)
* MSVC runtime libraries are now directly included with RSS Guard. (#400)
* Message/feeds list tooltips are now switchable. (#404)
* Old AdBlock implementation was replaced by new modern JS/NPM-based solution "Adblocker". (#410)
* RSS/ATOM/JSON parsers were updated to avoid some parsing errors. (#412)
* Google Reader API plugin is greatly enhanced, has better support for TheOldReader.
* Inoreader plugin was merged into Google Reader API plugin as Inoreader too uses Google Reader API.
* Toolbar search boxes have now dynamic width. (#431)
* Visual state of some dialogs is now remembered, for example "Cleanup database".
* Some GUI texts and terms were unified and changed (message -> article, download feed -> fetch feed, etc.). (#430)
* There is now some default filename set when exporting feeds to file.
* Number of unread messages is now shown on Linux also in taskbar (not just tray icon). (#437)
* Unified minimize/maximize/close window buttons in all RSS Guard dialogs. (#439)
* Most of text boxes now have "clear text" button. (#438)
* Feeds with disable auto-fetch policy now do not update on application start-up. (#444)
* Notifications with new messages is now only launched if there are NEW UNREAD messages. (#440)

Fixed/changed:
* RSS Guard can be correctly "killed. (#466)
* Database file "database.db" now not stored in redundant "local" subfolder.
* Expand state of "Labels" item is now remembered.
* Example scraper "translate-feed.py" now can translate ATOM feeds too.
* External tools now can be used with any hyperlink.
* Account's folders/feeds are resynchronized when "Edit" dialog exits only when really needed.
* Fixed problems related to custom order (and sorting) of columns in article list.
* Qt stylesheet from skins is now not loaded if there is already loaded some external stylesheet.
* Local-only labels/tags are now note removed when performing folder synchronization of the account. (#465)
* Progress bar in "Import/Export feeds" dialog was misleading and show invalid progress. (#379)
* Feeds were not correctly re-sorted by titles after some feed is renamed. (#387)
* "Select next unread message" feature produces some exotic message list scrolling. (#389)
* Application was not able to synchronize unread messages with Reedah. (#382)
* Fixed some repeated notifications when feed gets new articles. (#329)
* Fixed some article formatting in embedded web browser. (#403)
* Fixed crash in "Message filters" dialog. (#420)
* Fixed main window problem when hidden with tray icon activated in Linux/KDE. (#418)
* Font size in article previewer is now properly configurable. (#421)
* Added some missing icons. (#425)
* Improved some visual glitches in dialogs and skins. (#426)
* "Keep message selection in the middle" now works in a more reasonable way when trigerred with mouse vs keyboard. (#427)
* Fixed GUI behavior of "Database cleanup" dialog. (#433)
* "Bring application window to front once article is opened in external web browser" is now disabled by default. (#447)
* Fixed cooperation of "Next unread article" + "Keep message selection in the middle" features. (#435)
* URL of feeds are now sanitized before making a network request. (#450)
* All pictures from feeds should be now properly displayed. (#422)
* Completely overhauled the logic of detecting existing articles and updating them. (#451)
* Fixed problem when multi-column sorting was mistakenly activated when article list is reloaded after feed is fetched. (#453)
* Monochrome icon was adjusted a bit. (#458, @sakkamade)
* Fixed feeds list scrolling when feature "Next unread article" is activated. (#459)